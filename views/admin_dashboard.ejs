<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <script src="/socket.io/socket.io.js"></script>
  <style>
    .card {
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }
    
    .card:hover {
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }
    
    .card-header {
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      font-weight: 600;
    }
    
    .player-row:hover {
      background-color: #f8f9fa;
    }
    
    .table th {
      background-color: #f1f1f1;
    }
    
    .badge {
      font-weight: 500;
      padding: 0.4em 0.6em;
    }
    
    /* Role colors */
    .role-batsman {
      color: #dc3545;
    }
    
    .role-bowler {
      color: #28a745;
    }
    
    .role-all-rounder {
      color: #fd7e14;
    }
    
    .role-wicket-keeper {
      color: #17a2b8;
    }
    
    /* Status badges */
    .status-sold {
      background-color: #28a745;
    }
    
    .status-unsold {
      background-color: #dc3545;
    }
    
    .status-available {
      background-color: #fd7e14;
    }
    
    /* Section divider */
    .section-divider {
      margin: 2rem 0;
      height: 1px;
      background: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.1), transparent);
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/home">Cricket Auction</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto">
          <li class="nav-item">
            <a class="nav-link" href="/auction">Auction</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/teams">Teams</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/results">Results</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="/admin">Admin</a>
          </li>
        </ul>
        <ul class="navbar-nav">
          <% if (typeof adminUsername !== 'undefined') { %>
            <li class="nav-item">
              <span class="nav-link">
                <i class="fas fa-user-shield me-1"></i>Admin: <%= adminUsername %>
              </span>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin/logout">
                <i class="fas fa-sign-out-alt me-1"></i>Logout
              </a>
            </li>
          <% } else if (typeof team !== 'undefined' && team) { %>
            <li class="nav-item">
              <a class="btn btn-primary btn-sm" href="/team/dashboard">Team Profile</a>
            </li>
          <% } else { %>
            <li class="nav-item">
              <a class="btn btn-primary btn-sm" href="/team/login">Team Login</a>
            </li>
          <% } %>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <h1 class="mb-4">Admin Dashboard</h1>
    
    <% if (typeof usingMockDb !== 'undefined' && usingMockDb) { %>
      <div class="alert alert-warning">
        <strong>Note:</strong> Database connection could not be established. Using mock data for demonstration.
      </div>
    <% } %>
    
    <div class="section-divider"></div>
    <h2><i class="fas fa-users me-2"></i>Player Management</h2>
    <p class="text-muted">Add, edit and manage players for the auction</p>
    
    <div class="row">
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header bg-success text-white">
            <h5 class="mb-0">Add New Player</h5>
          </div>
          <div class="card-body">
            <form id="player-form" class="mb-3">
              <div class="mb-3">
                <label for="player-name" class="form-label">Player Name</label>
                <input type="text" class="form-control" id="player-name" required>
              </div>
              <div class="mb-3">
                <label for="player-role" class="form-label">Role</label>
                <select class="form-select" id="player-role" required>
                  <option value="">Select a role</option>
                  <option value="Batsman">Batsman</option>
                  <option value="Bowler">Bowler</option>
                  <option value="All-rounder">All-rounder</option>
                  <option value="Wicket-keeper">Wicket-keeper</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="player-base-price" class="form-label">Base Price</label>
                <input type="number" class="form-control" id="player-base-price" value="200000" required>
              </div>
              <div class="mb-3">
                <label for="player-team" class="form-label">Team (Optional)</label>
                <select class="form-select" id="player-team">
                  <option value="">No Team (Available for Auction)</option>
                  <% if (teams && teams.length > 0) { %>
                    <% teams.forEach(team => { %>
                      <option value="<%= team.id %>"><%= team.name %></option>
                    <% }) %>
                  <% } %>
                </select>
              </div>
              <div class="mb-3" id="player-sold-price-container" style="display: none;">
                <label for="player-sold-price" class="form-label">Sold Price</label>
                <input type="number" class="form-control" id="player-sold-price" value="0">
              </div>
              <button type="submit" class="btn btn-success">Add Player</button>
            </form>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Player Search & Filters</h5>
          </div>
          <div class="card-body">
            <div class="row mb-3">
              <div class="col-md-8">
                <input type="text" class="form-control" id="player-search" placeholder="Search players by name...">
              </div>
              <div class="col-md-4">
                <select class="form-select" id="player-filter">
                  <option value="all">All Players</option>
                  <option value="available">Available</option>
                  <option value="sold">Sold</option>
                  <option value="unsold">Unsold</option>
                </select>
              </div>
            </div>
            <div class="d-flex justify-content-between">
              <div class="text-muted">
                <i class="fas fa-info-circle me-1"></i>Total: <span id="player-count"><%= players ? players.length : 0 %></span> players
              </div>
              <button class="btn btn-sm btn-outline-primary" id="refresh-players">
                <i class="fas fa-sync-alt me-1"></i>Refresh
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div class="row">
      <div class="col-md-12">
        <div class="card mb-4">
          <div class="card-header bg-info text-white">
            <h5 class="mb-0">Existing Players</h5>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-sm table-striped">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Role</th>
                    <th>Base Price</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="players-table-body">
                  <% if (players && players.length > 0) { %>
                    <% players.forEach(player => { %>
                      <tr class="player-row" data-status="<%= player.team_id ? 'sold' : (player.status === 'unsold' ? 'unsold' : 'available') %>">
                        <td><%= player.name %></td>
                        <td>
                          <% const roleClass = player.role === 'Batsman' ? 'role-batsman' : 
                                            player.role === 'Bowler' ? 'role-bowler' : 
                                            player.role === 'All-rounder' ? 'role-all-rounder' : 
                                            player.role === 'Wicket-keeper' ? 'role-wicket-keeper' : ''; %>
                          <span class="<%= roleClass %>">
                            <i class="<%= player.role === 'Batsman' ? 'fas fa-baseball-ball' : 
                                      player.role === 'Bowler' ? 'fas fa-bowling-ball' : 
                                      player.role === 'All-rounder' ? 'fas fa-running' : 
                                      player.role === 'Wicket-keeper' ? 'fas fa-hands' : 'fas fa-user' %> me-1"></i>
                            <%= player.role %>
                          </span>
                        </td>
                        <td><%= typeof player.base_price !== 'undefined' ? player.base_price.toLocaleString() : '0' %></td>
                        <td>
                          <% if (player.team_id) { %>
                            <span class="badge bg-success">
                              <i class="fas fa-check-circle me-1"></i>Sold to <%= player.team_name || 'Unknown Team' %>
                              <% if (player.sold_price) { %>
                                for ₹<%= player.sold_price.toLocaleString() %>
                              <% } %>
                            </span>
                          <% } else if (player.status === 'unsold') { %>
                            <span class="badge bg-danger"><i class="fas fa-times-circle me-1"></i>Unsold</span>
                          <% } else { %>
                            <span class="badge bg-warning"><i class="fas fa-clock me-1"></i>Available</span>
                          <% } %>
                        </td>
                        <td>
                          <% if (player.team_id) { %>
                            <button class="btn btn-sm btn-warning reset-player-btn" data-player-id="<%= player.id %>">Reset</button>
                          <% } else { %>
                            <button class="btn btn-sm btn-primary assign-player-btn" data-player-id="<%= player.id %>" data-player-name="<%= player.name %>">Assign</button>
                            <button class="btn btn-sm btn-success start-player-auction-btn" data-player-id="<%= player.id %>" data-player-name="<%= player.name %>">
                              <i class="fas fa-gavel me-1"></i>Start Auction
                            </button>
                          <% } %>
                          <button class="btn btn-sm btn-danger delete-player-btn" data-player-id="<%= player.id %>">Delete</button>
                        </td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="5" class="text-center">No players available</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="section-divider"></div>
    <h2><i class="fas fa-gavel me-2"></i>Auction Control</h2>
    <p class="text-muted">Manage and control the live auction process</p>
    
    <div class="row">
      <div class="col-12">
        <div class="card">
          <div class="card-header bg-dark text-white">
            <h5 class="mb-0"><i class="fas fa-gavel me-2"></i>Auction Controls</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-md-4 mb-3">
                <div class="card h-100 bg-light">
                  <div class="card-body text-center p-4">
                    <h4 class="text-success mb-3"><i class="fas fa-play me-2"></i>Start Auction</h4>
                    <p><i class="fas fa-info-circle me-2"></i>Begin a new auction session for available players</p>
                    <button id="start-auction-btn" class="btn btn-success btn-lg w-100">
                      <i class="fas fa-play-circle me-2"></i>Start Auction
                    </button>
                  </div>
                </div>
              </div>
              
              <div class="col-md-4 mb-3">
                <div class="card h-100 bg-light">
                  <div class="card-body text-center p-4">
                    <h4 class="text-warning mb-3"><i class="fas fa-pause me-2"></i>Pause Auction</h4>
                    <p><i class="fas fa-info-circle me-2"></i>Temporarily pause the current auction session</p>
                    <button id="pause-auction-btn" class="btn btn-warning btn-lg w-100">
                      <i class="fas fa-pause-circle me-2"></i>Pause Auction
                    </button>
                  </div>
                </div>
              </div>
              
              <div class="col-md-4 mb-3">
                <div class="card h-100 bg-light">
                  <div class="card-body text-center p-4">
                    <h4 class="text-danger mb-3"><i class="fas fa-stop me-2"></i>End Auction</h4>
                    <p><i class="fas fa-info-circle me-2"></i>End the current auction session completely</p>
                    <button id="end-auction-btn" class="btn btn-danger btn-lg w-100">
                      <i class="fas fa-stop-circle me-2"></i>End Auction
                    </button>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="auction-status mt-4">
              <div class="alert alert-info">
                <div class="d-flex justify-content-between align-items-center">
                  <div>
                    <h5 class="alert-heading mb-1"><i class="fas fa-info-circle me-2"></i>Current Auction Status: <span id="auction-status-text">Not Running</span></h5>
                    <p class="mb-0" id="auction-status-message"><i class="fas fa-exclamation-circle me-2"></i>No active auction session.</p>
                  </div>
                  <div>
                    <span class="badge bg-secondary p-2" id="auction-player-count"><i class="fas fa-users me-2"></i>0 Players Available</span>
                  </div>
                </div>
              </div>
              
              <!-- Current player card (hidden by default) -->
              <div id="current-player-card" class="card mt-3 d-none">
                <div class="card-header bg-primary text-white">
                  <h5 class="mb-0"><i class="fas fa-user me-2"></i>Current Player</h5>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-8">
                      <h4 id="current-player-name">Player Name</h4>
                      <p><strong><i class="fas fa-running me-2"></i>Role:</strong> <span id="current-player-role">Role</span></p>
                      <p><strong><i class="fas fa-tag me-2"></i>Base Price:</strong> ₹<span id="current-player-base-price">0</span></p>
                      <div class="mt-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                          <span><i class="fas fa-clock me-2"></i>Time Remaining:</span>
                          <span class="badge bg-danger p-2" id="time-remaining">60s</span>
                        </div>
                        <div class="progress">
                          <div id="time-progress" class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 100%"></div>
                        </div>
                      </div>
                    </div>
                    <div class="col-md-4 text-center">
                      <button id="skip-player-btn" class="btn btn-warning mt-3">
                        <i class="fas fa-forward me-2"></i>Skip to Next Player
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal for assigning player to team -->
  <div class="modal fade" id="assignPlayerModal" tabindex="-1" aria-labelledby="assignPlayerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="assignPlayerModalLabel">Assign Player to Team</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="assign-player-form">
            <input type="hidden" id="assign-player-id">
            <div class="mb-3">
              <label for="assign-team" class="form-label">Select Team</label>
              <select class="form-select" id="assign-team" required>
                <option value="">Select a team</option>
                <% if (teams && teams.length > 0) { %>
                  <% teams.forEach(team => { %>
                    <option value="<%= team.id %>"><%= team.name %></option>
                  <% }) %>
                <% } %>
              </select>
            </div>
            <div class="mb-3">
              <label for="assign-price" class="form-label">Sold Price</label>
              <input type="number" class="form-control" id="assign-price" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="confirm-assign-btn">Assign Player</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/admin-auction-controls.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Show/hide sold price field based on team selection
      document.getElementById('player-team').addEventListener('change', function() {
        const soldPriceContainer = document.getElementById('player-sold-price-container');
        if (this.value) {
          soldPriceContainer.style.display = 'block';
        } else {
          soldPriceContainer.style.display = 'none';
        }
      });

      // Player form submission
      document.getElementById('player-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const playerData = {
          name: document.getElementById('player-name').value,
          role: document.getElementById('player-role').value,
          base_price: parseInt(document.getElementById('player-base-price').value)
        };
        
        // Add team_id and sold_price if a team is selected
        const teamId = document.getElementById('player-team').value;
        if (teamId) {
          playerData.team_id = parseInt(teamId);
          playerData.sold_price = parseInt(document.getElementById('player-sold-price').value);
        }
        
        fetch('/admin/players', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(playerData)
        })
        .then(response => response.json())
        .then(data => {
          alert('Player added successfully!');
          window.location.reload();
        })
        .catch(error => {
          console.error('Error adding player:', error);
          alert('Error adding player. Please try again.');
        });
      });
      
      // Delete player button click
      document.querySelectorAll('.delete-player-btn').forEach(button => {
        button.addEventListener('click', function() {
          const playerId = parseInt(this.getAttribute('data-player-id'));
          
          if (confirm('Are you sure you want to delete this player?')) {
            fetch(`/admin/players/${playerId}`, {
              method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
              alert('Player deleted successfully!');
              window.location.reload();
            })
            .catch(error => {
              console.error('Error deleting player:', error);
              alert('Error deleting player. Please try again.');
            });
          }
        });
      });
      
      // Reset player auction button click
      document.querySelectorAll('.reset-player-btn').forEach(button => {
        button.addEventListener('click', function() {
          const playerId = parseInt(this.getAttribute('data-player-id'));
          
          if (confirm('Are you sure you want to reset this player\'s auction?')) {
            fetch(`/admin/players/${playerId}/reset`, {
              method: 'POST'
            })
            .then(response => response.json())
            .then(data => {
              alert('Player auction reset successfully!');
              window.location.reload();
            })
            .catch(error => {
              console.error('Error resetting player auction:', error);
              alert('Error resetting player auction. Please try again.');
            });
          }
        });
      });

      // Assign player to team button click
      document.querySelectorAll('.assign-player-btn').forEach(button => {
        button.addEventListener('click', function() {
          const playerId = parseInt(this.getAttribute('data-player-id'));
          const playerName = this.getAttribute('data-player-name');
          
          // Set modal title and player ID
          document.getElementById('assignPlayerModalLabel').textContent = `Assign ${playerName} to Team`;
          document.getElementById('assign-player-id').value = playerId;
          
          // Get player base price and set as default sold price
          const playerRow = this.closest('tr');
          const basePriceText = playerRow.cells[2].textContent;
          const basePrice = parseInt(basePriceText.replace(/,/g, ''));
          document.getElementById('assign-price').value = basePrice;
          
          // Show the modal
          const assignModal = new bootstrap.Modal(document.getElementById('assignPlayerModal'));
          assignModal.show();
        });
      });
      
      // Confirm assign player button click
      document.getElementById('confirm-assign-btn').addEventListener('click', function() {
        const playerId = parseInt(document.getElementById('assign-player-id').value);
        const teamId = document.getElementById('assign-team').value;
        const soldPrice = parseInt(document.getElementById('assign-price').value);
        
        if (!teamId) {
          alert('Please select a team.');
          return;
        }
        
        if (!soldPrice || soldPrice <= 0) {
          alert('Please enter a valid sold price.');
          return;
        }
        
        fetch(`/admin/players/${playerId}/assign`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            team_id: parseInt(teamId),
            sold_price: soldPrice
          })
        })
        .then(response => response.json())
        .then(data => {
          alert('Player assigned to team successfully!');
          window.location.reload();
        })
        .catch(error => {
          console.error('Error assigning player to team:', error);
          alert('Error assigning player to team. Please try again.');
        });
        
        // Hide the modal
        const assignModal = bootstrap.Modal.getInstance(document.getElementById('assignPlayerModal'));
        assignModal.hide();
      });

      // Player search and filter functionality
      const playerSearch = document.getElementById('player-search');
      const playerFilter = document.getElementById('player-filter');
      const refreshPlayersBtn = document.getElementById('refresh-players');
      const playerRows = document.querySelectorAll('.player-row');
      const playerCount = document.getElementById('player-count');
      
      // Function to filter players based on search term and filter value
      function filterPlayers() {
        const searchTerm = playerSearch.value.toLowerCase();
        const filterValue = playerFilter.value;
        let visibleCount = 0;
        
        playerRows.forEach(row => {
          const playerName = row.querySelector('td:first-child').textContent.toLowerCase();
          const playerStatus = row.getAttribute('data-status');
          
          // Check if player matches both search term and filter
          const matchesSearch = playerName.includes(searchTerm);
          const matchesFilter = filterValue === 'all' || playerStatus === filterValue;
          
          if (matchesSearch && matchesFilter) {
            row.style.display = '';
            visibleCount++;
          } else {
            row.style.display = 'none';
          }
        });
        
        // Update player count
        playerCount.textContent = visibleCount;
      }
      
      // Add event listeners for search and filter
      playerSearch.addEventListener('input', filterPlayers);
      playerFilter.addEventListener('change', filterPlayers);
      
      // Refresh players button click
      refreshPlayersBtn.addEventListener('click', function() {
        this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Refreshing...';
        this.disabled = true;
        
        // Reload the page to refresh the player list
        window.location.reload();
      });
    });
  </script>
</body>
</html>