<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <title>Cricket Auction - Projector View</title>
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Roboto', Arial, sans-serif;
        }

        .card {
            border: 1px solid #007bff;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.2);
            margin-bottom: 30px;
        }

        .card-header {
            background-color: #007bff;
            color: white;
            padding: 20px;
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
        }

        .border-right {
            border-right: 1px solid #ddd;
        }

        h2, h4 {
            margin: 0;
            font-weight: bold;
        }
        
        .player-image {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 5px solid #fff;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            margin: 0 auto 20px;
            display: block;
        }
        
        .role-badge {
            font-size: 1.2rem;
            padding: 0.4rem 1rem;
            border-radius: 20px;
            display: inline-block;
            margin-bottom: 15px;
        }
        
        .batsman {
            background-color: #dc3545;
        }
        
        .bowler {
            background-color: #28a745;
        }
        
        .all-rounder {
            background-color: #fd7e14;
        }
        
        .wicket-keeper {
            background-color: #17a2b8;
        }
        
        .price {
            font-size: 1.5rem;
            font-weight: bold;
        }
        
        .upcoming-players {
            max-height: 400px;
            overflow-y: auto;
            padding: 20px;
        }
        
        .bid-history {
            max-height: 400px;
            overflow-y: auto;
            padding: 20px;
        }
        
        .player-list-item {
            border-left: 5px solid #007bff;
            padding: 10px 15px;
            margin-bottom: 15px;
            background-color: #f1f8ff;
            border-radius: 5px;
            transition: all 0.3s ease;
        }
        
        .player-list-item:hover {
            transform: translateX(5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .bid-item {
            border-left: 5px solid #28a745;
            padding: 10px 15px;
            margin-bottom: 15px;
            background-color: #f1fff8;
            border-radius: 5px;
            transition: all 0.3s ease;
        }
        
        .bid-item:hover {
            transform: translateX(5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .bid-amount {
            font-weight: bold;
            color: #28a745;
        }
        
        .highest-bid {
            border-left: 5px solid #dc3545;
            background-color: #fff8f8;
        }
        
        .highest-bid .bid-amount {
            color: #dc3545;
        }
        
        .timer-container {
            margin-top: 20px;
            text-align: center;
        }
        
        .timer {
            font-size: 2.5rem;
            font-weight: bold;
            color: #dc3545;
        }
        
        .progress {
            height: 10px;
            border-radius: 5px;
            margin-top: 10px;
        }
        
        @media (max-width: 768px) {
            .border-right {
                border-right: none;
                border-bottom: 1px solid #ddd;
                padding-bottom: 20px;
                margin-bottom: 20px;
            }
        }
        
        .current-bid-info {
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
            margin-top: 20px;
            text-align: center;
        }
        
        #current-bid {
            font-size: 2rem;
            font-weight: bold;
            color: #28a745;
        }
        
        #current-bidder {
            font-size: 1.5rem;
            color: #007bff;
        }
    </style>
</head>
<body>
    <div class="container-fluid my-5">
        <div class="card">
            <div class="card-header text-center">
                <div class="row">
                    <div class="col-md-4 d-flex align-items-center justify-content-center">
                        <img id="player-image" src="/images/default-player.png" alt="Player Image" class="player-image">
                    </div>
                    <div class="col-md-8">
                        <h2 id="player-name">Player Name</h2>
                        <div class="role-badge" id="role-badge">Role</div>
                        <p class="price">Base Price: â‚¹<span id="base-price">200,000</span></p>
                        
                        <div class="timer-container">
                            <div>Time Remaining: <span id="bid-timer" class="timer">30</span> seconds</div>
                            <div class="progress">
                                <div id="time-progress" class="progress-bar progress-bar-striped progress-bar-animated bg-success" style="width: 100%"></div>
                            </div>
                        </div>
                        
                        <div class="current-bid-info">
                            <h3>Current Bid</h3>
                            <div id="current-bid">No bids yet</div>
                            <div>By: <span id="current-bidder">-</span></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 border-right">
                    <div class="upcoming-players">
                        <h4 class="mb-4"><i class="fas fa-users me-2"></i>Upcoming Players</h4>
                        <div id="upcoming-players-list">
                            <!-- Upcoming players will be loaded here -->
                            <div class="text-center">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                                <p>Loading upcoming players...</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="bid-history">
                        <h4 class="mb-4"><i class="fas fa-history me-2"></i>Bid History</h4>
                        <div id="bid-history-list">
                            <!-- Bid history will be loaded here -->
                            <div class="text-center">
                                <p>No bids placed yet</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM elements
            const playerName = document.getElementById('player-name');
            const playerImage = document.getElementById('player-image');
            const roleBadge = document.getElementById('role-badge');
            const basePrice = document.getElementById('base-price');
            const bidTimer = document.getElementById('bid-timer');
            const timeProgress = document.getElementById('time-progress');
            const currentBid = document.getElementById('current-bid');
            const currentBidder = document.getElementById('current-bidder');
            const upcomingPlayersList = document.getElementById('upcoming-players-list');
            const bidHistoryList = document.getElementById('bid-history-list');
            
            // Initialize Socket.IO
            const socket = io();
            
            // Socket connection event
            socket.on('connect', () => {
                console.log('Connected to server: ' + socket.id);
            });
            
            // Listen for auction status updates
            socket.on('auction-status', (data) => {
                try {
                    console.log('Received auction status:', data);
                    const { isRunning, isPaused, isWaiting, currentPlayer, message, timeRemaining } = data;
                    
                    // Update current player if provided
                    if (currentPlayer) {
                        updateCurrentPlayer(currentPlayer);
                    }
                    
                    // Update timer if provided
                    if (timeRemaining !== undefined) {
                        updateTimer(timeRemaining);
                    }
                } catch (error) {
                    console.error('Error handling auction status:', error);
                }
            });
            
            // Listen for new bids
            socket.on('new-bid', (data) => {
                console.log('Received new bid:', data);
                updateBidInfo(data);
            });
            
            // Listen for upcoming players update
            socket.on('upcoming-players', (data) => {
                console.log('Received upcoming players:', data);
                updateUpcomingPlayers(data.players);
            });
            
            // Listen for timer updates
            socket.on('timer-update', (data) => {
                console.log('Received timer update:', data);
                updateTimer(data.timeRemaining);
            });
            
            // Update current player function
            function updateCurrentPlayer(player) {
                playerName.textContent = player.name;
                
                // Update role badge
                roleBadge.textContent = player.role;
                roleBadge.className = 'role-badge';
                if (player.role === 'Batsman') {
                    roleBadge.classList.add('batsman');
                } else if (player.role === 'Bowler') {
                    roleBadge.classList.add('bowler');
                } else if (player.role === 'All-Rounder' || player.role === 'All-rounder') {
                    roleBadge.classList.add('all-rounder');
                } else if (player.role === 'Wicket-Keeper' || player.role === 'Wicket-keeper') {
                    roleBadge.classList.add('wicket-keeper');
                }
                
                // Update base price
                basePrice.textContent = formatCurrency(player.base_price || player.basePrice);
                
                // Update player image if available
                if (player.image_url) {
                    playerImage.src = player.image_url;
                } else {
                    // Set default image based on role
                    const roleDefaults = {
                        'Batsman': '/images/default-batsman.png',
                        'Bowler': '/images/default-bowler.png',
                        'All-Rounder': '/images/default-all-rounder.png',
                        'All-rounder': '/images/default-all-rounder.png',
                        'Wicket-Keeper': '/images/default-wicket-keeper.png',
                        'Wicket-keeper': '/images/default-wicket-keeper.png'
                    };
                    playerImage.src = roleDefaults[player.role] || '/images/default-player.png';
                }
                
                // Reset bid info
                currentBid.textContent = 'No bids yet';
                currentBidder.textContent = '-';
                
                // Clear bid history
                bidHistoryList.innerHTML = '<div class="text-center"><p>No bids placed yet</p></div>';
                
                // Load bid history if player has an ID
                if (player.id) {
                    loadBidHistory(player.id);
                }
            }
            
            // Update bid info function
            function updateBidInfo(bid) {
                currentBid.textContent = formatCurrency(bid.amount);
                currentBidder.textContent = bid.team_name || bid.teamName;
                
                // Update bid history
                loadBidHistory(bid.player_id || bid.playerId);
            }
            
            // Load bid history function
            function loadBidHistory(playerId) {
                fetch(`/auction/player/${playerId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.bids && data.bids.length > 0) {
                            bidHistoryList.innerHTML = '';
                            
                            data.bids.forEach((bid, index) => {
                                const bidItem = document.createElement('div');
                                bidItem.className = index === 0 ? 'bid-item highest-bid' : 'bid-item';
                                
                                bidItem.innerHTML = `
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <strong>${bid.team_name}</strong>
                                        </div>
                                        <div class="bid-amount">â‚¹${formatCurrency(bid.amount)}</div>
                                    </div>
                                    <div class="text-muted small">${formatTime(bid.created_at || new Date())}</div>
                                `;
                                
                                bidHistoryList.appendChild(bidItem);
                            });
                        } else {
                            bidHistoryList.innerHTML = '<div class="text-center"><p>No bids placed yet</p></div>';
                        }
                    })
                    .catch(error => {
                        console.error('Error loading bid history:', error);
                        bidHistoryList.innerHTML = '<div class="text-center text-danger"><p>Error loading bid history</p></div>';
                    });
            }
            
            // Update upcoming players function
            function updateUpcomingPlayers(players) {
                if (!players || players.length === 0) {
                    upcomingPlayersList.innerHTML = '<div class="text-center"><p>No upcoming players</p></div>';
                    return;
                }
                
                upcomingPlayersList.innerHTML = '';
                
                players.forEach(player => {
                    const playerItem = document.createElement('div');
                    playerItem.className = 'player-list-item';
                    
                    playerItem.innerHTML = `
                        <div class="d-flex justify-content-between">
                            <div>
                                <strong>${player.name}</strong>
                                <div><span class="badge ${getRoleBadgeClass(player.role)}">${player.role}</span></div>
                            </div>
                            <div>
                                <span class="badge bg-primary">â‚¹${formatCurrency(player.base_price || player.basePrice)}</span>
                            </div>
                        </div>
                    `;
                    
                    upcomingPlayersList.appendChild(playerItem);
                });
            }
            
            // Update timer function
            function updateTimer(timeRemaining) {
                if (!timeRemaining || timeRemaining <= 0) {
                    bidTimer.textContent = "--";
                    timeProgress.style.width = '0%';
                    timeProgress.className = 'progress-bar progress-bar-striped progress-bar-animated bg-secondary';
                    return;
                }
                
                // Update timer text
                bidTimer.textContent = timeRemaining;
                
                // Update progress bar
                const progressPercent = (timeRemaining / 60) * 100;
                timeProgress.style.width = `${progressPercent}%`;
                
                // Update progress bar color
                if (progressPercent > 60) {
                    timeProgress.className = 'progress-bar progress-bar-striped progress-bar-animated bg-success';
                } else if (progressPercent > 30) {
                    timeProgress.className = 'progress-bar progress-bar-striped progress-bar-animated bg-warning';
                } else {
                    timeProgress.className = 'progress-bar progress-bar-striped progress-bar-animated bg-danger';
                }
                
                // Add warning class when time is running out
                if (timeRemaining <= 10) {
                    bidTimer.classList.add('warning');
                } else {
                    bidTimer.classList.remove('warning');
                }
            }
            
            // Helper function to format currency
            function formatCurrency(amount) {
                return new Intl.NumberFormat('en-IN').format(amount);
            }
            
            // Helper function to format time
            function formatTime(timestamp) {
                const date = new Date(timestamp);
                return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' });
            }
            
            // Helper function to get role badge class
            function getRoleBadgeClass(role) {
                if (role === 'Batsman') return 'bg-danger';
                if (role === 'Bowler') return 'bg-success';
                if (role === 'All-Rounder' || role === 'All-rounder') return 'bg-warning';
                if (role === 'Wicket-Keeper' || role === 'Wicket-keeper') return 'bg-info';
                return 'bg-secondary';
            }
            
            // Initial load of auction status
            fetch('/auction/status')
                .then(response => response.json())
                .then(data => {
                    console.log('Initial auction status:', data);
                    
                    // If there's a current player, update the UI
                    if (data.currentPlayer) {
                        updateCurrentPlayer(data.currentPlayer);
                    }
                    
                    // If there's a time remaining, update the timer
                    if (data.timeRemaining !== undefined) {
                        updateTimer(data.timeRemaining);
                    }
                })
                .catch(error => {
                    console.error('Error fetching initial auction status:', error);
                });
                
            // Initial load of upcoming players
            fetch('/auction/upcoming-players')
                .then(response => response.json())
                .then(data => {
                    console.log('Initial upcoming players:', data);
                    
                    if (data.players) {
                        updateUpcomingPlayers(data.players);
                    }
                })
                .catch(error => {
                    console.error('Error fetching upcoming players:', error);
                    upcomingPlayersList.innerHTML = '<div class="text-center text-danger"><p>Error loading upcoming players</p></div>';
                });
        });
    </script>
</body>
</html> 